set(MODEL_TOOLS_PROJECT_NAME "model-tools")
unset(MODEL_TOOLS_ROOT)
find_path(MODEL_TOOLS_ROOT NAMES ${MODEL_TOOLS_PROJECT_NAME} HINTS ${BOLT_ROOT} $ENV{BOLT_ROOT})
set(MODEL_TOOLS_ROOT "${MODEL_TOOLS_ROOT}/${MODEL_TOOLS_PROJECT_NAME}")

if (USE_DYNAMIC_LIBRARY)
    set(MODEL_TOOLS_TFLITE_LIBRARY "${MODEL_TOOLS_ROOT}/lib/lib${MODEL_TOOLS_PROJECT_NAME}_tflite.so")
else (USE_DYNAMIC_LIBRARY)
    set(MODEL_TOOLS_TFLITE_LIBRARY "${MODEL_TOOLS_ROOT}/lib/lib${MODEL_TOOLS_PROJECT_NAME}_tflite.a")
endif (USE_DYNAMIC_LIBRARY)

if (MODEL_TOOLS_TFLITE_LIBRARY)
    set(MODEL_TOOLS_TFLITE_FOUND true)
endif (MODEL_TOOLS_TFLITE_LIBRARY)

find_package(FlatBuffers)
find_package(TFLite)

if (MODEL_TOOLS_TFLITE_FOUND)
    include_directories(include ${FlatBuffers_INCLUDE_DIR})
    if (USE_GNU_GCC)
        set(MODEL_TOOLS_TFLITE_LIBRARIES "${MODEL_TOOLS_TFLITE_LIBRARY};-lpthread")
    endif(USE_GNU_GCC)
    if (USE_LLVM_CLANG)
        set(MODEL_TOOLS_TFLITE_LIBRARIES "${MODEL_TOOLS_TFLITE_LIBRARY}")
    endif(USE_LLVM_CLANG)
    message(STATUS "Found ${MODEL_TOOLS_PROJECT_NAME}_tflite: ${MODEL_TOOLS_TFLITE_LIBRARY}")
else (MODEL_TOOLS_TFLITE_FOUND)
    message(FATAL_ERROR "
FATAL: can not find lib${MODEL_TOOLS_PROJECT_NAME}_tflite.* library in <BOLT_ROOT>/model-tools/lib directory,
       please set shell or cmake environment variable BOLT_ROOT.
    ")
endif (MODEL_TOOLS_TFLITE_FOUND)
